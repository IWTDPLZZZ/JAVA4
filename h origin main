[1mdiff --git a/README.md b/README.md[m
[1mnew file mode 100644[m
[1mindex 0000000..531ce2d[m
[1m--- /dev/null[m
[1m+++ b/README.md[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m
[32m+[m[32m–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–µ–∞—è —Ä–∞–±–æ—Ç–∞ ‚Ññ2, —É—á/–≥—Ä—É–ø–ø–∞ 334701[m
[32m+[m
[32m+[m[32m1. –ü–æ–¥–∫–ª—é—á–∏—Ç—å –≤ –ø—Ä–æ–µ–∫—Ç –ë–î (PostgreSQL/MySQL/–∏ —Ç.–¥.).[m
[32m+[m[32m (0 - 7 –±–∞–ª–ª–æ–≤) - –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å–≤—è–∑–∏ –æ–¥–∏–Ω –∫–æ –º–Ω–æ–≥–∏–º @OneToMany[m
[32m+[m[32m (8 - 10 –±–∞–ª–ª–æ–≤) - –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å–≤—è–∑–∏ –º–Ω–æ–≥–∏–µ –∫–æ –º–Ω–æ–≥–∏–º @ManyToMany[m
[32m+[m[32m 2. –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å CRUD-–æ–ø–µ—Ä–∞—Ü–∏–∏ —Å–æ –≤—Å–µ–º–∏ —Å—É—â–Ω–æ—Å—Ç—è–º–∏.[m
[1mdiff --git a/src/main/java/orf/demo/controller/SpellCheckCategoryController.java b/src/main/java/orf/demo/controller/SpellCheckCategoryController.java[m
[1mindex b7f4053..dd2a90f 100644[m
[1m--- a/src/main/java/orf/demo/controller/SpellCheckCategoryController.java[m
[1m+++ b/src/main/java/orf/demo/controller/SpellCheckCategoryController.java[m
[36m@@ -49,6 +49,7 @@[m [mpublic class SpellCheckCategoryController {[m
         return ResponseEntity.ok().build();[m
     }[m
 [m
[32m+[m[32m    // –ú–µ—Ç–æ–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–≤—è–∑—è–º–∏[m
     @PostMapping("/{spellCheckId}/categories/{categoryId}")[m
     public ResponseEntity<?> addCategoryToSpellCheck(@PathVariable Long spellCheckId,[m
                                                      @PathVariable Long categoryId) {[m
[1mdiff --git a/src/main/java/orf/demo/controller/SpellCheckController.java b/src/main/java/orf/demo/controller/SpellCheckController.java[m
[1mindex 519ac36..bf0921d 100644[m
[1m--- a/src/main/java/orf/demo/controller/SpellCheckController.java[m
[1m+++ b/src/main/java/orf/demo/controller/SpellCheckController.java[m
[36m@@ -1,7 +1,11 @@[m
 package orf.demo.controller;[m
 [m
 import orf.demo.model.SpellCheck;[m
[32m+[m[32mimport orf.demo.model.SpellCheckCategory;[m
[32m+[m[32mimport orf.demo.model.Category;[m
 import orf.demo.service.SpellCheckService;[m
[32m+[m[32mimport orf.demo.repository.SpellCheckCategoryRepository;[m
[32m+[m[32mimport orf.demo.repository.CategoryRepository;[m
 import org.springframework.beans.factory.annotation.Autowired;[m
 import org.springframework.web.bind.annotation.GetMapping;[m
 import org.springframework.web.bind.annotation.RequestParam;[m
[36m@@ -9,6 +13,8 @@[m [mimport org.springframework.web.bind.annotation.RestController;[m
 import java.util.HashMap;[m
 import java.util.List;[m
 import java.util.Map;[m
[32m+[m[32mimport java.util.HashSet;[m
[32m+[m[32mimport java.util.Set;[m
 [m
 @RestController[m
 public class SpellCheckController {[m
[36m@@ -16,10 +22,59 @@[m [mpublic class SpellCheckController {[m
     @Autowired[m
     private SpellCheckService spellCheckService;[m
 [m
[32m+[m[32m    @Autowired[m
[32m+[m[32m    private SpellCheckCategoryRepository spellCheckRepository;[m
[32m+[m
[32m+[m[32m    @Autowired[m
[32m+[m[32m    private CategoryRepository categoryRepository;[m
[32m+[m
     @GetMapping("/check")[m
     public Map<String, Object> checkText(@RequestParam String text) {[m
         Map<String, Object> response = new HashMap<>();[m
[31m-        List<SpellCheck> errors = spellCheckService.processAndSaveSpellChecks(text);[m
[32m+[m[32m        List<SpellCheck> errors = spellCheckService.checkSentence(text);[m
[32m+[m
[32m+[m[32m        // –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é "–û—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—è" (–∏–ª–∏ —Å–æ–∑–¥–∞–µ–º, –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)[m
[32m+[m[32m        List<Category> orthographyCategories = categoryRepository.findByName("–û—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—è");[m
[32m+[m[32m        Category orthographyCategory;[m
[32m+[m
[32m+[m[32m        if (orthographyCategories.isEmpty()) {[m
[32m+[m[32m            orthographyCategory = new Category("–û—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—è");[m
[32m+[m[32m            categoryRepository.save(orthographyCategory);[m
[32m+[m[32m        } else {[m
[32m+[m[32m            orthographyCategory = orthographyCategories.get(0);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∂–¥–æ–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö[m
[32m+[m[32m        for (SpellCheck error : errors) {[m
[32m+[m[32m            // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ —Å–ª–æ–≤–æ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö[m
[32m+[m[32m            List<SpellCheckCategory> existingEntities = spellCheckRepository.findByName(error.getWord());[m
[32m+[m[32m            SpellCheckCategory spellCheckEntity;[m
[32m+[m
[32m+[m[32m            if (existingEntities.isEmpty()) {[m
[32m+[m[32m                // –ï—Å–ª–∏ —Å–ª–æ–≤–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å[m
[32m+[m[32m                spellCheckEntity = new SpellCheckCategory();[m
[32m+[m[32m                spellCheckEntity.setName(error.getWord());[m
[32m+[m[32m            } else {[m
[32m+[m[32m                // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤—É—é –Ω–∞–π–¥–µ–Ω–Ω—É—é –∑–∞–ø–∏—Å—å[m
[32m+[m[32m                spellCheckEntity = existingEntities.get(0);[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∏ —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏[m
[32m+[m[32m            spellCheckEntity.setStatus(error.getStatus());[m
[32m+[m[32m            spellCheckEntity.setError(error.getError());[m
[32m+[m
[32m+[m[32m            // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é[m
[32m+[m[32m            Set<Category> categories = spellCheckEntity.getCategories();[m
[32m+[m[32m            if (categories == null) {[m
[32m+[m[32m                categories = new HashSet<>();[m
[32m+[m[32m            }[m
[32m+[m[32m            categories.add(orthographyCategory);[m
[32m+[m[32m            spellCheckEntity.setCategories(categories);[m
[32m+[m
[32m+[m[32m            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö[m
[32m+[m[32m            spellCheckRepository.save(spellCheckEntity);[m
[32m+[m[32m        }[m
[32m+[m
         response.put("errors", errors);[m
         return response;[m
     }[m
[1mdiff --git a/src/main/java/orf/demo/model/SpellCheck.java b/src/main/java/orf/demo/model/SpellCheck.java[m
[1mindex 73856f8..520d673 100644[m
[1m--- a/src/main/java/orf/demo/model/SpellCheck.java[m
[1m+++ b/src/main/java/orf/demo/model/SpellCheck.java[m
[36m@@ -5,6 +5,7 @@[m [mpublic class SpellCheck {[m
     private String status;[m
     private String error;[m
 [m
[32m+[m[32m    // –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã[m
     public SpellCheck() {}[m
 [m
     public SpellCheck(String word, String status, String error) {[m
[36m@@ -13,6 +14,7 @@[m [mpublic class SpellCheck {[m
         this.error = error;[m
     }[m
 [m
[32m+[m[32m    // –ì–µ—Ç—Ç–µ—Ä—ã –∏ —Å–µ—Ç—Ç–µ—Ä—ã[m
     public String getWord() {[m
         return word;[m
     }[m
[1mdiff --git a/src/main/java/orf/demo/model/SpellCheckCategory.java b/src/main/java/orf/demo/model/SpellCheckCategory.java[m
[1mindex fe57466..2a9e0cf 100644[m
[1m--- a/src/main/java/orf/demo/model/SpellCheckCategory.java[m
[1m+++ b/src/main/java/orf/demo/model/SpellCheckCategory.java[m
[36m@@ -37,6 +37,7 @@[m [mpublic class SpellCheckCategory {[m
         this.error = error;[m
     }[m
 [m
[32m+[m[32m    // –ú–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è SpellCheck –≤ SpellCheckCategory[m
     public static SpellCheckCategory fromSpellCheck(SpellCheck spellCheck) {[m
         return new SpellCheckCategory([m
                 spellCheck.getWord(),[m
[36m@@ -45,6 +46,7 @@[m [mpublic class SpellCheckCategory {[m
         );[m
     }[m
 [m
[32m+[m[32m    // –ì–µ—Ç—Ç–µ—Ä—ã –∏ —Å–µ—Ç—Ç–µ—Ä—ã[m
     public Long getId() {[m
         return id;[m
     }[m
[36m@@ -85,11 +87,13 @@[m [mpublic class SpellCheckCategory {[m
         this.categories = categories;[m
     }[m
 [m
[32m+[m[32m    // –ú–µ—Ç–æ–¥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏[m
     public void addCategory(Category category) {[m
         this.categories.add(category);[m
         category.getSpellChecks().add(this);[m
     }[m
 [m
[32m+[m[32m    // –ú–µ—Ç–æ–¥ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏[m
     public void removeCategory(Category category) {[m
         this.categories.remove(category);[m
         category.getSpellChecks().remove(this);[m
[1mdiff --git a/src/main/java/orf/demo/repository/demo.java b/src/main/java/orf/demo/repository/demo.java[m
[1mnew file mode 100644[m
[1mindex 0000000..f3fac76[m
[1m--- /dev/null[m
[1m+++ b/src/main/java/orf/demo/repository/demo.java[m
[36m@@ -0,0 +1,5 @@[m
[32m+[m[32mpackage orf.demo.repository;[m
[32m+[m
[32m+[m[32mpublic class demo {[m
[32m+[m[32m    //none[m
[32m+[m[32m}[m
[1mdiff --git a/src/main/java/orf/demo/service/SpellCheckService.java b/src/main/java/orf/demo/service/SpellCheckService.java[m
[1mindex e6c3582..150fed5 100644[m
[1m--- a/src/main/java/orf/demo/service/SpellCheckService.java[m
[1m+++ b/src/main/java/orf/demo/service/SpellCheckService.java[m
[36m@@ -16,7 +16,10 @@[m [mimport java.io.IOException;[m
 import java.io.InputStreamReader;[m
 import java.net.HttpURLConnection;[m
 import java.net.URL;[m
[31m-import java.util.*;[m
[32m+[m[32mimport java.util.ArrayList;[m
[32m+[m[32mimport java.util.List;[m
[32m+[m[32mimport java.util.Optional;[m
[32m+[m[32mimport java.util.Set;[m
 [m
 @Service[m
 public class SpellCheckService {[m
[36m@@ -40,46 +43,7 @@[m [mpublic class SpellCheckService {[m
 [m
         return results;[m
     }[m
[31m-    @Transactional[m
[31m-    public List<SpellCheck> processAndSaveSpellChecks(String text) {[m
[31m-        List<SpellCheck> errors = checkSentence(text);[m
[31m-[m
[31m-        List<Category> orthographyCategories = categoryRepository.findByName("–û—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—è");[m
[31m-        Category orthographyCategory;[m
[31m-[m
[31m-        if (orthographyCategories.isEmpty()) {[m
[31m-            orthographyCategory = new Category("–û—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—è");[m
[31m-            categoryRepository.save(orthographyCategory);[m
[31m-        } else {[m
[31m-            orthographyCategory = orthographyCategories.get(0);[m
[31m-        }[m
[31m-[m
[31m-        for (SpellCheck error : errors) {[m
[31m-            List<SpellCheckCategory> existingEntities = spellCheckCategoryRepository.findByName(error.getWord());[m
[31m-            SpellCheckCategory spellCheckEntity;[m
[31m-[m
[31m-            if (existingEntities.isEmpty()) {[m
[31m-                spellCheckEntity = new SpellCheckCategory();[m
[31m-                spellCheckEntity.setName(error.getWord());[m
[31m-            } else {[m
[31m-                spellCheckEntity = existingEntities.get(0);[m
[31m-            }[m
[31m-[m
[31m-            spellCheckEntity.setStatus(error.getStatus());[m
[31m-            spellCheckEntity.setError(error.getError());[m
[31m-[m
[31m-            Set<Category> categories = spellCheckEntity.getCategories();[m
[31m-            if (categories == null) {[m
[31m-                categories = new HashSet<>();[m
[31m-            }[m
[31m-            categories.add(orthographyCategory);[m
[31m-            spellCheckEntity.setCategories(categories);[m
 [m
[31m-            spellCheckCategoryRepository.save(spellCheckEntity);[m
[31m-        }[m
[31m-[m
[31m-        return errors;[m
[31m-    }[m
     private SpellCheck checkWord(String word) {[m
         String urlStr = "https://api.dictionaryapi.dev/api/v2/entries/en/" + word;[m
         try {[m
[36m@@ -129,6 +93,7 @@[m [mpublic class SpellCheckService {[m
         spellCheckCategoryRepository.save(spellCheck);[m
     }[m
 [m
[32m+[m[32m    // –ú–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏[m
     public List<Category> getAllCategories() {[m
         return categoryRepository.findAll();[m
     }[m
[1mdiff --git a/src/main/resources/application.properties b/src/main/resources/application.properties[m
[1mindex 6b82f45..0d97a08 100644[m
[1m--- a/src/main/resources/application.properties[m
[1m+++ b/src/main/resources/application.properties[m
[36m@@ -1,8 +1,9 @@[m
[31m-# ????????? ??????????? ? MySQL[m
[31m-spring.datasource.url=jdbc:mysql://localhost:3306/qwe?useSSL=false&serverTimezone=UTC[m
[31m-spring.datasource.username=root[m
[31m-spring.datasource.password=1234[m
[31m-[m
[31m-# ????????? Hibernate[m
[31m-spring.jpa.hibernate.ddl-auto=update[m
[31m-spring.jpa.show-sql=true[m
[32m+[m
[32m+[m[32mspring.datasource.url=[m
[32m+[m[32mspring.datasource.username=[m
[32m+[m[32mspring.datasource.password=[m
[32m+[m
[32m+[m
[32m+[m[32mspring.jpa.hibernate.ddl-auto[m
[32m+[m[32mspring.jpa.show-sql[m
[41m+[m
